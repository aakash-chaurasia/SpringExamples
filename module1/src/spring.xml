<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-init-method="myInit" default-destroy-method="cleanUp">

    <!-- Since there are two constructor with single param
    <bean id="triangleWith1Constructor" class="Triangle">
        <constructor-arg value="Equilateral"/>
    </bean>
    -->
    <bean id="triangleWith2Constructor" class="Triangle">
        <constructor-arg value="Scalene"/>
        <constructor-arg value="35"/>
    </bean>
    <bean id="triangleWithProperty" class="Triangle">
        <property name="type" value="RightAngled"/>
        <property name="height" value="24"/>
    </bean>
    <bean id="triangleWithStringConstructor" class="Triangle">
        <constructor-arg type="java.lang.String" value="EquiScalene"/>
    </bean>
    <bean id="triangleWithIntConstructor" class="Triangle">
        <constructor-arg type="java.lang.Integer" value="25"/>
    </bean>
    <bean id="zeroPoint" class="Point">
        <property name="x" value="0"/>
        <property name="y" value="0"/>
    </bean>
    <bean id="point2" class="Point">
        <property name="x" value="0"/>
        <property name="y" value="10"/>
    </bean>
    <bean id="point3" class="Point">
        <property name="x" value="20"/>
        <property name="y" value="10"/>
    </bean>
    <bean id="point4" class="Point">
        <property name="x" value="20"/>
        <property name="y" value="0"/>
    </bean>
    <bean id="rectangle" class="Rectangle">
        <property name="pointA" ref="zeroPoint"/>
        <property name="pointB" ref="point2"/>
        <property name="pointC" ref="point3"/>
        <property name="pointD" ref="point4"/>
    </bean>
    <bean id="rectangleWithInnerBean" class="Rectangle">
        <property name="pointA" ref="zeroPoint"/>
        <property name="pointB" ref="point2"/>
        <property name="pointC" >
            <bean class="Point">
                <property name="x" value="10"/>
                <property name="y" value="5"/>
            </bean>
        </property>
        <property name="pointD">
            <bean class="Point">
                <property name="x" value="10"/>
                <property name="y" value="0"/>
            </bean>
        </property>
    </bean>
    <alias name="rectangleWithInnerBean" alias="rectangleWithInnerBeanAlias"/>
    <bean id="polygon" class="Polygon">
        <property name="points">
            <list>
                <ref bean="zeroPoint"/>
                <ref bean="point2"/>
                <ref bean="point3"/>
                <ref bean="point4"/>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <bean id="line" class="Line" autowire="byName"/>
    <bean id="startPoint" class="Point">
        <property name="x" value="25"/>
        <property name="y" value="17"/>
    </bean>
    <bean id="endPoint" class="Point">
        <property name="x" value="29"/>
        <property name="y" value="45"/>
    </bean>
	<!--<bean id="lineByType" class="Line" autowire="byType"/>-->
    <bean id="triangleSingleton" class="Triangle" scope="singleton"/>
    <bean id="trianglePrototype" class="Triangle" scope="prototype"/>
    <bean id="triangleRequest" class="Triangle" scope="request"/>
    <bean id="triangleGlobal" class="Triangle" scope="globalSession"/>
    <bean id="triangleSession" class="Triangle" scope="session"/>

    <bean id="pentagon" class="Pentagon"/>
    <bean id="pentagonPrototype" class="Pentagon" scope="prototype"/>
    <!-- Bean definition inheritance normal-->
    <bean id="parentRectangle" class="Rectangle">
        <property name="PointA" ref="point2"/>
        <property name="PointB" ref="zeroPoint"/>
    </bean>
    <!-- Bean parent list-->
    <bean id="polygonParent" class="Polygon">
        <property name="points">
            <list>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <bean id="rectangleWithParentBean" class="Rectangle" parent="parentRectangle">
        <property name="pointC" ref="point3"/>
        <property name="pointD" ref="zeroPoint"/>
    </bean>
    <!-- Bean definition inheritance over writing parent bean-->
    <bean id="rectangleWithParentBeanOverwritten" class="Rectangle" parent="parentRectangle">
        <property name="pointB" ref="point4"/>
        <property name="pointC" ref="point3"/>
        <property name="pointD" ref="zeroPoint"/>
    </bean>
    <!-- Bean definition inheritance over writing parent bean by default-->
    <bean id="polygonWithParentReplaceParent" class="Polygon" parent="polygonParent">
        <property name="points">
            <list>
                <ref bean="point2"/>
                <ref bean="point3"/>
                <ref bean="point4"/>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <!-- Bean definition inheritance merging parent bean by default-->
    <bean id="polygonWithParentMerging" class="Polygon" parent="polygonParent">
        <property name="points">
            <list merge="true">
                <ref bean="point2"/>
                <ref bean="point3"/>
                <ref bean="point4"/>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <!-- Parent Abstract Bean-->
    <bean id="polygonAbstractParent" class="Polygon" >
        <property name="points">
            <list>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <bean id="polygonWithAbstractParent" class="Polygon" parent="polygonAbstractParent">
        <property name="points">
            <list merge="true">
                <ref bean="point2"/>
                <ref bean="point3"/>
                <ref bean="point4"/>
                <ref bean="zeroPoint"/>
            </list>
        </property>
    </bean>
    <!-- Lifecycle Callbacks-->
    <bean id="abstractTriangle" class="TriangleAbstract">
        <property name="pointA" ref="zeroPoint"/>
        <property name="pointB" ref="point2"/>
        <property name="pointC" ref="point3"/>
    </bean>
    <!-- Lifecycle callback with custom methods-->
    <bean id="customTriangle" class="TriangleMyInit">
        <property name="pointA" ref="zeroPoint"/>
        <property name="pointB" ref="point2"/>
        <property name="pointC" ref="point3"/>
    </bean>
    <!--Bean Post Processor-->
    <bean class="DisplayNameBeanPostProcessor"/>
    <!--Bean Factory Post Processoer-->
    <bean class = "DisplayBeanFactoryPostProcessor"/>

    <!-- Initializing values from bean properties fiel-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="spring.properties"/>
    </bean>
    <bean id="pointProperties" class="Point">
        <property name="x" value="${PointA.pointX}"/>
        <property name="y" value="${PointA.pointY}"/>
    </bean>
    <bean id="lineWithProperties" class="Line">
        <property name="startPoint" ref="zeroPoint"/>
        <property name="endPoint" ref="pointProperties"/>
    </bean>

    <!-- beans with interfaces-->
    <bean id="circle" class="Circle">
        <property name="centre" ref="zeroPoint"/>
    </bean>
    <bean id="hexagon" class="Hexagon">
        <property name="points">
            <list>
                <ref bean="zeroPoint"/>
                <ref bean="point2"/>
                <ref bean="point3"/>
                <ref bean="point4"/>
                <ref bean="zeroPoint"/>
                <ref bean="point3"/>
            </list>
        </property>
    </bean>
</beans>